generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int         @id @default(autoincrement())
  username    String      @unique
  email       String      @unique
  password    String
  lastName    String
  firstName   String
  surName     String?
  department  String
  position    String
  phone       String?     @unique
  stateStatus StateStatus
  role        Role
  img         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Recipient {
  id             Int         @id @default(autoincrement())
  username       String      @unique
  lastName       String
  firstName      String
  surName        String?
  department     String?
  position       String
  stateStatus    StateStatus
  stateStartDate DateTime
  stateEndDate   DateTime
  phone          String?     @unique
  img            String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  eventId Int?
  event   Event? @relation(fields: [eventId], references: [id])

  kits              Kit[]
  recipientComments RecipientComments[]
}

model RecipientComments {
  id      Int    @id @default(autoincrement())
  comment String

  createdAt DateTime @default(now())

  recipientId Int?
  recipient   Recipient? @relation(fields: [recipientId], references: [id])
}

model Event {
  id        Int      @id @default(autoincrement())
  title     String   @unique
  day       Day
  startDate DateTime
  endDate   DateTime
  startTime DateTime
  endTime   DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  recipients Recipient[]
  kits       Kit[]
}

model Kit {
  id   Int    @id @default(autoincrement())
  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  eventId     Int?
  event       Event?     @relation(fields: [eventId], references: [id])
  recipientId Int?
  recipient   Recipient? @relation(fields: [recipientId], references: [id])

  equipments Equipment[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  subCategoryLevel1 SubCategoryLevel1[]
  equipments        Equipment[]
}

model SubCategoryLevel1 {
  id   Int    @id @default(autoincrement())
  name String @unique

  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])

  subCategoryLevel2 SubCategoryLevel2[]
  equipments        Equipment[]
}

model SubCategoryLevel2 {
  id   Int    @id @default(autoincrement())
  name String @unique

  subCategoryLevel1Id Int?
  subCategoryLevel1   SubCategoryLevel1? @relation(fields: [subCategoryLevel1Id], references: [id])

  equipments Equipment[]
}

model Equipment {
  id               Int              @id @default(autoincrement())
  name             String           @unique
  model            String
  company          String
  description      String
  serialNumber     String
  inventoryNumber  String
  datePurchase     String
  statusEmployment StatusEmployment
  img              String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  kitId               Int?
  kit                 Kit?               @relation(fields: [kitId], references: [id])
  categoryId          Int
  category            Category           @relation(fields: [categoryId], references: [id])
  subCategoryLevel1Id Int?
  subCategoryLevel1   SubCategoryLevel1? @relation(fields: [subCategoryLevel1Id], references: [id])
  subCategoryLevel2Id Int?
  subCategoryLevel2   SubCategoryLevel2? @relation(fields: [subCategoryLevel2Id], references: [id])

  equipmentComments EquipmentComments[]
}

model EquipmentComments {
  id      Int    @id @default(autoincrement())
  comment String

  createdAt DateTime @default(now())

  equipmentId Int?
  equipment   Equipment? @relation(fields: [equipmentId], references: [id])
}

enum Role {
  guest
  user
  admin
}

enum StateStatus {
  contract
  freelance
}

enum StatusEmployment {
  free
  work
  repair
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}
